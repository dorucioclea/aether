---
AWSTemplateFormatVersion: '2010-09-09'

Description: gather2 environment

Parameters:

  ProjectName:
    Description: name of deployed project
    Type: String
    MinLength: 3

  Environment:
    Description: Application environment
    Type: String
    MinLength: 3

  HostedZone:
    Description: Hosted zone name
    Type: String
    MinLength: 3

  SNSTopic:
    Description: ARN of SNS Topic for alarms
    Type: String
    AllowedPattern: arn:aws:sns:.*
    ConstraintDescription: Expected valid ARN (starting with arn:aws:sns:)

  GetOrCreateRecordLambda:
    Description: ARN of Lambda responsible for storing records
    Type: String
    AllowedPattern: arn:aws:lambda:.*
    ConstraintDescription: Expected valid ARN (starting with arn:aws:lambda:)

  ConfigurationTemplate:
    Description: Reference to Beanstalk ConfigurationTemplate
    Type: String
    MinLength: 3

  Subnets:
    Description: Reference to VPC Subnets list
    Type: CommaDelimitedList

  ApplicationVersion:
    Description: Reference to Benastalk ApplicationVersion
    Type: String
    MinLength: 3

  Application:
    Description: Reference to Beanstalk Application
    Type: String
    MinLength: 3

  VPC:
    Description: Reference to VPC
    Type: String
    MinLength: 3

  KmsKey:
    Description: KMS key for DB encryption
    Type: String
    MinLength: 3

  InstanceType:
    Description: Size of web server instance
    Type: String
    MinLength: 3

  DbInstanceType:
    Description: Type of DB instance
    Type: String
    MinLength: 3

  DbAllocatedStorage:
    Description: DB storage size
    Type: Number

  DbEncryption:
    Description: Boolean deciding if db should be encrypted
    Type: String
    AllowedValues:
      - true
      - false

  DbSnapshot:
    Description: ID of db snapshot, if left empty create empty DB
    Type: String

  DbMultiAz:
    Description: Boolean deciding if db should be deployed in multi AZ model
    Type: String
    AllowedValues:
      - true
      - false

  DomainName:
    Description: Domain name
    Type: String
    MinLength: 3

Mappings:

  Beanstalk2Route53HostedZoneId:
    us-east-1:
      HostedZoneId: Z117KPS5GTRQ2G
    us-west-1:
      HostedZoneId: Z1LQECGX5PH1X
    us-west-2:
      HostedZoneId: Z38NKT9BP95V3O
    eu-west-1:
      HostedZoneId: Z3NF1Z3NOM5OY2
    eu-central-1:
      HostedZoneId: Z1FRNW7UH4DEZJ
    ap-northeast-1:
      HostedZoneId: Z1R25G3KIG2GBW
    ap-northeast-2:
      HostedZoneId: Z3JE5OI70TWKCP
    ap-southeast-1:
      HostedZoneId: Z16FZ9L249IFLT
    ap-southeast-2:
      HostedZoneId: Z2PCDNR3VC2G1N
    sa-east-1:
      HostedZoneId: Z10X7K2B4QSOFV

Conditions:

  DbEncryptionBool: !Equals [!Ref DbEncryption, true]

  DbFromSnapshot: !Not [!Equals [!Ref DbSnapshot, '']]

  DbMultiAzBool: !Equals [!Ref DbMultiAz, 'true']

Resources:

  GetOrCreateDbPassword:
    Type: Custom::GetOrCreateRecord
    Properties:
      ServiceToken: !Ref GetOrCreateRecordLambda
      RecordName: !Join ['-', [!Ref ProjectName, !Ref Environment, db_password]]

  GetOrCreateDbUser:
    Type: Custom::GetOrCreateRecord
    Properties:
      ServiceToken: !Ref GetOrCreateRecordLambda
      RecordName: !Join ['-', [!Ref ProjectName, !Ref Environment, db_user]]
      RecordValue: umsadmin

  GetOrCreateDbName:
    Type: Custom::GetOrCreateRecord
    Properties:
      ServiceToken: !Ref GetOrCreateRecordLambda
      RecordName: !Join ['-', [!Ref ProjectName, !Ref Environment, db_name]]
      RecordValue: ums

  GetOrCreateDbPort:
    Type: Custom::GetOrCreateRecord
    Properties:
      ServiceToken: !Ref GetOrCreateRecordLambda
      RecordName: !Join ['-', [!Ref ProjectName, !Ref Environment, db_port]]
      RecordValue: 5432

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Group of VPC subnets for DB
      SubnetIds: !Ref Subnets

  DBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      Engine: postgres
      DBName: !If [DbFromSnapshot, !Ref 'AWS::NoValue', !GetAtt [GetOrCreateDbName, RecordValue]]
      MasterUsername: !If [DbFromSnapshot, !Ref 'AWS::NoValue', !GetAtt [GetOrCreateDbUser, RecordValue]]
      MasterUserPassword: !If [DbFromSnapshot, !Ref 'AWS::NoValue', !GetAtt [GetOrCreateDbPassword, RecordValue]]
      Port: !If [DbFromSnapshot, !Ref 'AWS::NoValue', !GetAtt [GetOrCreateDbPort, RecordValue]]
      DBInstanceClass: !Ref DbInstanceType
      VPCSecurityGroups:
        - !GetAtt [DBSecurityGroup, GroupId]
      DBSubnetGroupName: !Ref DBSubnetGroup
      AllocatedStorage: !Ref DbAllocatedStorage
      StorageType: gp2
      PubliclyAccessible: false
      BackupRetentionPeriod: 35
      DBInstanceIdentifier: !Join ['-', [!Ref ProjectName, !Ref Environment]]
      StorageEncrypted: !If [DbEncryptionBool, true, !Ref 'AWS::NoValue']
      KmsKeyId: !If [DbEncryptionBool, !Ref KmsKey, !Ref 'AWS::NoValue']
      DBSnapshotIdentifier: !If [DbFromSnapshot, !Ref DbSnapshot, !Ref 'AWS::NoValue']
      MultiAZ: !If [DbMultiAzBool, 'true', 'false']

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: BeanstalkSecurityGroup
    Properties:
      GroupDescription: DB security group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !GetAtt [GetOrCreateDbPort, RecordValue]
          ToPort: !GetAtt [GetOrCreateDbPort, RecordValue]
          SourceSecurityGroupId: !Ref BeanstalkSecurityGroup

  BeanstalkSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to Elastic Beanstalk instances
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  BeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref Application
      EnvironmentName: !Join ['-', [!Ref ProjectName, !Ref Environment]]
      Description: Beanstalk environment
      VersionLabel: !Ref ApplicationVersion
      TemplateName: !Ref ConfigurationTemplate
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value: !Ref BeanstalkSecurityGroup
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: !Ref InstanceType
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: RDS_PASSWORD
          Value: !GetAtt [GetOrCreateDbPassword, RecordValue]
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: RDS_USERNAME
          Value: !GetAtt [GetOrCreateDbUser, RecordValue]
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: RDS_DB_NAME
          Value: !GetAtt [GetOrCreateDbName, RecordValue]
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: RDS_PORT
          Value: !GetAtt [GetOrCreateDbPort, RecordValue]
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: RDS_HOSTNAME
          Value: !GetAtt [DBInstance, Endpoint.Address]

  DNSRecord:
    Type: AWS::Route53::RecordSet
    DependsOn: BeanstalkEnvironment
    Properties:
      HostedZoneName: !Join ['', [!Ref HostedZone, '.']]
      Comment: DNS name
      Name: !Join ['', [!Ref DomainName, '.', !Ref HostedZone, '.']]
      Type: A
      AliasTarget:
        HostedZoneId: !FindInMap [Beanstalk2Route53HostedZoneId, !Ref 'AWS::Region', HostedZoneId]
        DNSName: !GetAtt [BeanstalkEnvironment, EndpointURL]

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['', [!Ref ProjectName, '-', !Ref Environment]]
      RetentionInDays: 180

  BytesTransferredMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref LogGroup
      FilterPattern: "[]"
      MetricTransformations:
        - MetricValue: "$size"
          MetricNamespace: !Join ['', [!Ref ProjectName, '/']]
          MetricName: !Join ['', [!Ref Environment, '-', BytesTransferred]]

  BandwidthAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: The average volume of traffic is greater 3500 KB over 10 minutes
      MetricName: !Join ['', [!Ref Environment, '-', BytesTransferred]]
      Namespace: !Join ['', [!Ref ProjectName, '/']]
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 3500
      AlarmActions:
        - !Ref SNSTopic
      ComparisonOperator: GreaterThanThreshold

Outputs:

  DNSName:
    Description: DNS name
    Value: !Ref DNSRecord
